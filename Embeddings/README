1) protT5 -> ProtT5-XL-UniRef50 (also ProtT5-XL-U50) model of ProtTrans embedder downloaded from Rostlab (https://github.com/Rostlab/ProtTrans).

2) 1_csv_to_fasta.py -> Converts csv file to fasta format which is needed by the embedder.
    2.1) 1st user-input -> Input file path on line 1.
    2.2) 2nd user-input -> Output file path on line 2.

3) 2_create_embeddings.py -> Generate ProtTrans embeddings in a binary file (.h5 file).
    3.1) 1st user-input -> Input file path on line 8.
    3.2) 2nd user-input -> Output file path on line 19.

4) 3_merge_embeddings.py -> Merge epitope embeddings and non-epitope embeddings into a single numpy array.
                            Also converts .h5 file to .npy file (binary data to numpy array required for ML).
    3.1) 1st user-input -> Filename with epitope embeddings on line 5.
    3.2) 2nd user-input -> Filename with non-epitope embeddings on line 6.
    3.3) 3rd user-input -> Output file name on line 7.
    3.4) 4th user-input -> Specify number of epitopes on line 9.
    3.5) 5th user-input -> Specify number of non-epitopes on line 10.   

5) 4_process_embeddings.py -> This script is needed when the input dataset is a list of peptides and we have no information on which are epitopes or not. This script will mainly convert .h5 file to .npy file (binary data to numpy array required for ML). 
    5.1) 1st user-input -> Filename with embeddings on line 5.
    5.2) 2nd user-input -> Output file name on line 6.
    5.3) 3rd user-input -> Output file name storing peptide identifiers on line 7. 
    5.4) 4th user-input -> Specify number of peptides on line 9.       